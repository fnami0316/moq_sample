// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"sync"
	"time"
)

// SampleMock is a mock implementation of sample.Sample.
//
//	func TestSomethingThatUsesSample(t *testing.T) {
//
//		// make and configure a mocked sample.Sample
//		mockedSample := &SampleMock{
//			NowFunc: func() time.Time {
//				panic("mock out the Now method")
//			},
//		}
//
//		// use mockedSample in code that requires sample.Sample
//		// and then make assertions.
//
//	}
type SampleMock struct {
	// NowFunc mocks the Now method.
	NowFunc func() time.Time

	// calls tracks calls to the methods.
	calls struct {
		// Now holds details about calls to the Now method.
		Now []struct {
		}
	}
	lockNow sync.RWMutex
}

// Now calls NowFunc.
func (mock *SampleMock) Now() time.Time {
	callInfo := struct {
	}{}
	mock.lockNow.Lock()
	mock.calls.Now = append(mock.calls.Now, callInfo)
	mock.lockNow.Unlock()
	if mock.NowFunc == nil {
		var (
			timeOut time.Time
		)
		return timeOut
	}
	return mock.NowFunc()
}

// NowCalls gets all the calls that were made to Now.
// Check the length with:
//
//	len(mockedSample.NowCalls())
func (mock *SampleMock) NowCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockNow.RLock()
	calls = mock.calls.Now
	mock.lockNow.RUnlock()
	return calls
}

// ResetNowCalls reset all the calls that were made to Now.
func (mock *SampleMock) ResetNowCalls() {
	mock.lockNow.Lock()
	mock.calls.Now = nil
	mock.lockNow.Unlock()
}

// ResetCalls reset all the calls that were made to all mocked methods.
func (mock *SampleMock) ResetCalls() {
	mock.lockNow.Lock()
	mock.calls.Now = nil
	mock.lockNow.Unlock()
}
